<?php

// TODO: Even though this part is auto-generated by the open-api generator i have to be able to modify
//   it so it's only copied once but would be nice to find another way...

/**
 * Todoist API
 *
 * PHP version 7.1
 *
 * @package todoist\Api
 * @author  OpenAPI Generator team
 * @version 0.5.0
 * @link    https://github.com/openapitools/openapi-generator
 */

require_once __DIR__ . '/../vendor/autoload.php';

// Load the .env file
$dotenv = Dotenv\Dotenv::createImmutable(__DIR__ . "/../");
$dotenv->load();

use todoist\SlimRouter;
use Psr\Http\Message\ServerRequestInterface;
use Psr\Http\Message\ResponseInterface;
use todoist\Mock\OpenApiDataMocker;


$containerBuilder = new \DI\ContainerBuilder();

$containerBuilder->addDefinitions([
    \todoist\Services\Db::class => function (\Psr\Container\ContainerInterface $c) {
        $pdo = new \PDO($_ENV["DB_DSN"], $_ENV["DB_USER"], $_ENV["DB_PASSWORD"]);
        $pdo->setAttribute(\PDO::ATTR_ERRMODE, \PDO::ERRMODE_EXCEPTION);
        $pdo->setAttribute(\PDO::ATTR_DEFAULT_FETCH_MODE, \PDO::FETCH_ASSOC);
        $pdo->query("Set Names 'utf8';");
        return new \todoist\Services\Db($pdo, file_get_contents(__DIR__ . "/../db/init.sql"));
    }
]);

$router = new SlimRouter($containerBuilder->build());
$app = $router->getSlimApp();

/**
 * The routing middleware should be added before the ErrorMiddleware
 * Otherwise exceptions thrown from it will not be handled
 */
$app->addRoutingMiddleware();

/**
 * Add Error Handling Middleware
 *
 * @param bool $displayErrorDetails -> Should be set to false in production
 * @param bool $logErrors -> Parameter is passed to the default ErrorHandler
 * @param bool $logErrorDetails -> Display error details in error log
 * which can be replaced by a callable of your choice.

 * Note: This middleware should be added last. It will not handle any exceptions/errors
 * for middleware added after it.
 */
// $app->addErrorMiddleware(false, true, true);

$app->run();
